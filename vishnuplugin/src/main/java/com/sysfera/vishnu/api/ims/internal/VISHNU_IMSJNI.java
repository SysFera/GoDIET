/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sysfera.vishnu.api.ims.internal;


class VISHNU_IMSJNI {
  public final static native long new_EObject();
  public final static native void delete_EObject(long jarg1);
  public final static native void EObject__initialize(long jarg1, EObject jarg1_);
  public final static native long EObject_eClass(long jarg1, EObject jarg1_);
  public final static native boolean EObject_eIsProxy(long jarg1, EObject jarg1_);
  public final static native int EObject_eResource(long jarg1, EObject jarg1_);
  public final static native long EObject_eContainer(long jarg1, EObject jarg1_);
  public final static native long EObject_eContainingFeature(long jarg1, EObject jarg1_);
  public final static native long EObject_eContainmentFeature(long jarg1, EObject jarg1_);
  public final static native long EObject_eContents(long jarg1, EObject jarg1_);
  public final static native int EObject_eAllContents(long jarg1, EObject jarg1_);
  public final static native long EObject_eCrossReferences(long jarg1, EObject jarg1_);
  public final static native long EObject_eGet__SWIG_0(long jarg1, EObject jarg1_, long jarg2);
  public final static native long EObject_eGet__SWIG_1(long jarg1, EObject jarg1_, long jarg2, boolean jarg3);
  public final static native void EObject_eSet__SWIG_0(long jarg1, EObject jarg1_, long jarg2, long jarg3);
  public final static native boolean EObject_eIsSet__SWIG_0(long jarg1, EObject jarg1_, long jarg2);
  public final static native void EObject_eUnset__SWIG_0(long jarg1, EObject jarg1_, long jarg2);
  public final static native long EObject_eInvoke(long jarg1, EObject jarg1_, long jarg2, long jarg3);
  public final static native long EObject_eGet__SWIG_2(long jarg1, EObject jarg1_, int jarg2, boolean jarg3);
  public final static native void EObject_eSet__SWIG_1(long jarg1, EObject jarg1_, int jarg2, long jarg3);
  public final static native boolean EObject_eIsSet__SWIG_1(long jarg1, EObject jarg1_, int jarg2);
  public final static native void EObject_eUnset__SWIG_1(long jarg1, EObject jarg1_, int jarg2);
  public final static native long EObject__eClass(long jarg1, EObject jarg1_);
  public final static native void EObject__setEContainer(long jarg1, EObject jarg1_, long jarg2, EObject jarg2_, long jarg3);
  public final static native long new_ExportOp();
  public final static native void delete_ExportOp(long jarg1);
  public final static native void ExportOp__initialize(long jarg1, ExportOp jarg1_);
  public final static native int ExportOp_getExportType(long jarg1, ExportOp jarg1_);
  public final static native void ExportOp_setExportType(long jarg1, ExportOp jarg1_, int jarg2);
  public final static native long ExportOp_eGet(long jarg1, ExportOp jarg1_, int jarg2, boolean jarg3);
  public final static native void ExportOp_eSet(long jarg1, ExportOp jarg1_, int jarg2, long jarg3);
  public final static native boolean ExportOp_eIsSet(long jarg1, ExportOp jarg1_, int jarg2);
  public final static native void ExportOp_eUnset(long jarg1, ExportOp jarg1_, int jarg2);
  public final static native long ExportOp__eClass(long jarg1, ExportOp jarg1_);
  public final static native long new_CurMetricOp();
  public final static native void delete_CurMetricOp(long jarg1);
  public final static native void CurMetricOp__initialize(long jarg1, CurMetricOp jarg1_);
  public final static native int CurMetricOp_getMetricType(long jarg1, CurMetricOp jarg1_);
  public final static native void CurMetricOp_setMetricType(long jarg1, CurMetricOp jarg1_, int jarg2);
  public final static native long CurMetricOp_eGet(long jarg1, CurMetricOp jarg1_, int jarg2, boolean jarg3);
  public final static native void CurMetricOp_eSet(long jarg1, CurMetricOp jarg1_, int jarg2, long jarg3);
  public final static native boolean CurMetricOp_eIsSet(long jarg1, CurMetricOp jarg1_, int jarg2);
  public final static native void CurMetricOp_eUnset(long jarg1, CurMetricOp jarg1_, int jarg2);
  public final static native long CurMetricOp__eClass(long jarg1, CurMetricOp jarg1_);
  public final static native long new_Metric();
  public final static native void delete_Metric(long jarg1);
  public final static native void Metric__initialize(long jarg1, Metric jarg1_);
  public final static native int Metric_getType(long jarg1, Metric jarg1_);
  public final static native void Metric_setType(long jarg1, Metric jarg1_, int jarg2);
  public final static native double Metric_getValue(long jarg1, Metric jarg1_);
  public final static native void Metric_setValue(long jarg1, Metric jarg1_, double jarg2);
  public final static native int Metric_getTime(long jarg1, Metric jarg1_);
  public final static native void Metric_setTime(long jarg1, Metric jarg1_, int jarg2);
  public final static native long Metric_eGet(long jarg1, Metric jarg1_, int jarg2, boolean jarg3);
  public final static native void Metric_eSet(long jarg1, Metric jarg1_, int jarg2, long jarg3);
  public final static native boolean Metric_eIsSet(long jarg1, Metric jarg1_, int jarg2);
  public final static native void Metric_eUnset(long jarg1, Metric jarg1_, int jarg2);
  public final static native long Metric__eClass(long jarg1, Metric jarg1_);
  public final static native long new_ListMetric();
  public final static native void delete_ListMetric(long jarg1);
  public final static native void ListMetric__initialize(long jarg1, ListMetric jarg1_);
  public final static native long ListMetric_getMetric(long jarg1, ListMetric jarg1_);
  public final static native long ListMetric_eGet(long jarg1, ListMetric jarg1_, int jarg2, boolean jarg3);
  public final static native void ListMetric_eSet(long jarg1, ListMetric jarg1_, int jarg2, long jarg3);
  public final static native boolean ListMetric_eIsSet(long jarg1, ListMetric jarg1_, int jarg2);
  public final static native void ListMetric_eUnset(long jarg1, ListMetric jarg1_, int jarg2);
  public final static native long ListMetric__eClass(long jarg1, ListMetric jarg1_);
  public final static native long new_ListProcesses();
  public final static native void delete_ListProcesses(long jarg1);
  public final static native void ListProcesses__initialize(long jarg1, ListProcesses jarg1_);
  public final static native long ListProcesses_getProcess(long jarg1, ListProcesses jarg1_);
  public final static native long ListProcesses_eGet(long jarg1, ListProcesses jarg1_, int jarg2, boolean jarg3);
  public final static native void ListProcesses_eSet(long jarg1, ListProcesses jarg1_, int jarg2, long jarg3);
  public final static native boolean ListProcesses_eIsSet(long jarg1, ListProcesses jarg1_, int jarg2);
  public final static native void ListProcesses_eUnset(long jarg1, ListProcesses jarg1_, int jarg2);
  public final static native long ListProcesses__eClass(long jarg1, ListProcesses jarg1_);
  public final static native long new_ListSysInfo();
  public final static native void delete_ListSysInfo(long jarg1);
  public final static native void ListSysInfo__initialize(long jarg1, ListSysInfo jarg1_);
  public final static native long ListSysInfo_getSysInfo(long jarg1, ListSysInfo jarg1_);
  public final static native long ListSysInfo_eGet(long jarg1, ListSysInfo jarg1_, int jarg2, boolean jarg3);
  public final static native void ListSysInfo_eSet(long jarg1, ListSysInfo jarg1_, int jarg2, long jarg3);
  public final static native boolean ListSysInfo_eIsSet(long jarg1, ListSysInfo jarg1_, int jarg2);
  public final static native void ListSysInfo_eUnset(long jarg1, ListSysInfo jarg1_, int jarg2);
  public final static native long ListSysInfo__eClass(long jarg1, ListSysInfo jarg1_);
  public final static native long new_ListThreshold();
  public final static native void delete_ListThreshold(long jarg1);
  public final static native void ListThreshold__initialize(long jarg1, ListThreshold jarg1_);
  public final static native long ListThreshold_getThreshold(long jarg1, ListThreshold jarg1_);
  public final static native long ListThreshold_eGet(long jarg1, ListThreshold jarg1_, int jarg2, boolean jarg3);
  public final static native void ListThreshold_eSet(long jarg1, ListThreshold jarg1_, int jarg2, long jarg3);
  public final static native boolean ListThreshold_eIsSet(long jarg1, ListThreshold jarg1_, int jarg2);
  public final static native void ListThreshold_eUnset(long jarg1, ListThreshold jarg1_, int jarg2);
  public final static native long ListThreshold__eClass(long jarg1, ListThreshold jarg1_);
  public final static native long new_MetricHistOp();
  public final static native void delete_MetricHistOp(long jarg1);
  public final static native void MetricHistOp__initialize(long jarg1, MetricHistOp jarg1_);
  public final static native long MetricHistOp_getStartTime(long jarg1, MetricHistOp jarg1_);
  public final static native void MetricHistOp_setStartTime(long jarg1, MetricHistOp jarg1_, long jarg2);
  public final static native long MetricHistOp_getEndTime(long jarg1, MetricHistOp jarg1_);
  public final static native void MetricHistOp_setEndTime(long jarg1, MetricHistOp jarg1_, long jarg2);
  public final static native long MetricHistOp_eGet(long jarg1, MetricHistOp jarg1_, int jarg2, boolean jarg3);
  public final static native void MetricHistOp_eSet(long jarg1, MetricHistOp jarg1_, int jarg2, long jarg3);
  public final static native boolean MetricHistOp_eIsSet(long jarg1, MetricHistOp jarg1_, int jarg2);
  public final static native void MetricHistOp_eUnset(long jarg1, MetricHistOp jarg1_, int jarg2);
  public final static native long MetricHistOp__eClass(long jarg1, MetricHistOp jarg1_);
  public final static native long new_Process();
  public final static native void delete_Process(long jarg1);
  public final static native void Process__initialize(long jarg1, Process jarg1_);
  public final static native String Process_getProcessName(long jarg1, Process jarg1_);
  public final static native void Process_setProcessName(long jarg1, Process jarg1_, String jarg2);
  public final static native String Process_getMachineId(long jarg1, Process jarg1_);
  public final static native void Process_setMachineId(long jarg1, Process jarg1_, String jarg2);
  public final static native String Process_getDietId(long jarg1, Process jarg1_);
  public final static native void Process_setDietId(long jarg1, Process jarg1_, String jarg2);
  public final static native int Process_getState(long jarg1, Process jarg1_);
  public final static native void Process_setState(long jarg1, Process jarg1_, int jarg2);
  public final static native long Process_getTimestamp(long jarg1, Process jarg1_);
  public final static native void Process_setTimestamp(long jarg1, Process jarg1_, long jarg2);
  public final static native String Process_getScript(long jarg1, Process jarg1_);
  public final static native void Process_setScript(long jarg1, Process jarg1_, String jarg2);
  public final static native long Process_eGet(long jarg1, Process jarg1_, int jarg2, boolean jarg3);
  public final static native void Process_eSet(long jarg1, Process jarg1_, int jarg2, long jarg3);
  public final static native boolean Process_eIsSet(long jarg1, Process jarg1_, int jarg2);
  public final static native void Process_eUnset(long jarg1, Process jarg1_, int jarg2);
  public final static native long Process__eClass(long jarg1, Process jarg1_);
  public final static native long new_ProcessOp();
  public final static native void delete_ProcessOp(long jarg1);
  public final static native void ProcessOp__initialize(long jarg1, ProcessOp jarg1_);
  public final static native String ProcessOp_getMachineId(long jarg1, ProcessOp jarg1_);
  public final static native void ProcessOp_setMachineId(long jarg1, ProcessOp jarg1_, String jarg2);
  public final static native long ProcessOp_eGet(long jarg1, ProcessOp jarg1_, int jarg2, boolean jarg3);
  public final static native void ProcessOp_eSet(long jarg1, ProcessOp jarg1_, int jarg2, long jarg3);
  public final static native boolean ProcessOp_eIsSet(long jarg1, ProcessOp jarg1_, int jarg2);
  public final static native void ProcessOp_eUnset(long jarg1, ProcessOp jarg1_, int jarg2);
  public final static native long ProcessOp__eClass(long jarg1, ProcessOp jarg1_);
  public final static native long new_RestartOp();
  public final static native void delete_RestartOp(long jarg1);
  public final static native void RestartOp__initialize(long jarg1, RestartOp jarg1_);
  public final static native String RestartOp_getVishnuConf(long jarg1, RestartOp jarg1_);
  public final static native void RestartOp_setVishnuConf(long jarg1, RestartOp jarg1_, String jarg2);
  public final static native int RestartOp_getSedType(long jarg1, RestartOp jarg1_);
  public final static native void RestartOp_setSedType(long jarg1, RestartOp jarg1_, int jarg2);
  public final static native long RestartOp_eGet(long jarg1, RestartOp jarg1_, int jarg2, boolean jarg3);
  public final static native void RestartOp_eSet(long jarg1, RestartOp jarg1_, int jarg2, long jarg3);
  public final static native boolean RestartOp_eIsSet(long jarg1, RestartOp jarg1_, int jarg2);
  public final static native void RestartOp_eUnset(long jarg1, RestartOp jarg1_, int jarg2);
  public final static native long RestartOp__eClass(long jarg1, RestartOp jarg1_);
  public final static native long new_SysInfoOp();
  public final static native void delete_SysInfoOp(long jarg1);
  public final static native void SysInfoOp__initialize(long jarg1, SysInfoOp jarg1_);
  public final static native String SysInfoOp_getMachineId(long jarg1, SysInfoOp jarg1_);
  public final static native void SysInfoOp_setMachineId(long jarg1, SysInfoOp jarg1_, String jarg2);
  public final static native long SysInfoOp_eGet(long jarg1, SysInfoOp jarg1_, int jarg2, boolean jarg3);
  public final static native void SysInfoOp_eSet(long jarg1, SysInfoOp jarg1_, int jarg2, long jarg3);
  public final static native boolean SysInfoOp_eIsSet(long jarg1, SysInfoOp jarg1_, int jarg2);
  public final static native void SysInfoOp_eUnset(long jarg1, SysInfoOp jarg1_, int jarg2);
  public final static native long SysInfoOp__eClass(long jarg1, SysInfoOp jarg1_);
  public final static native long new_SystemInfo();
  public final static native void delete_SystemInfo(long jarg1);
  public final static native void SystemInfo__initialize(long jarg1, SystemInfo jarg1_);
  public final static native long SystemInfo_getMemory(long jarg1, SystemInfo jarg1_);
  public final static native void SystemInfo_setMemory(long jarg1, SystemInfo jarg1_, long jarg2);
  public final static native long SystemInfo_getDiskSpace(long jarg1, SystemInfo jarg1_);
  public final static native void SystemInfo_setDiskSpace(long jarg1, SystemInfo jarg1_, long jarg2);
  public final static native String SystemInfo_getMachineId(long jarg1, SystemInfo jarg1_);
  public final static native void SystemInfo_setMachineId(long jarg1, SystemInfo jarg1_, String jarg2);
  public final static native long SystemInfo_eGet(long jarg1, SystemInfo jarg1_, int jarg2, boolean jarg3);
  public final static native void SystemInfo_eSet(long jarg1, SystemInfo jarg1_, int jarg2, long jarg3);
  public final static native boolean SystemInfo_eIsSet(long jarg1, SystemInfo jarg1_, int jarg2);
  public final static native void SystemInfo_eUnset(long jarg1, SystemInfo jarg1_, int jarg2);
  public final static native long SystemInfo__eClass(long jarg1, SystemInfo jarg1_);
  public final static native long new_Threshold();
  public final static native void delete_Threshold(long jarg1);
  public final static native void Threshold__initialize(long jarg1, Threshold jarg1_);
  public final static native double Threshold_getValue(long jarg1, Threshold jarg1_);
  public final static native void Threshold_setValue(long jarg1, Threshold jarg1_, double jarg2);
  public final static native String Threshold_getMachineId(long jarg1, Threshold jarg1_);
  public final static native void Threshold_setMachineId(long jarg1, Threshold jarg1_, String jarg2);
  public final static native int Threshold_getType(long jarg1, Threshold jarg1_);
  public final static native void Threshold_setType(long jarg1, Threshold jarg1_, int jarg2);
  public final static native long Threshold_eGet(long jarg1, Threshold jarg1_, int jarg2, boolean jarg3);
  public final static native void Threshold_eSet(long jarg1, Threshold jarg1_, int jarg2, long jarg3);
  public final static native boolean Threshold_eIsSet(long jarg1, Threshold jarg1_, int jarg2);
  public final static native void Threshold_eUnset(long jarg1, Threshold jarg1_, int jarg2);
  public final static native long Threshold__eClass(long jarg1, Threshold jarg1_);
  public final static native long new_ThresholdOp();
  public final static native void delete_ThresholdOp(long jarg1);
  public final static native void ThresholdOp__initialize(long jarg1, ThresholdOp jarg1_);
  public final static native String ThresholdOp_getMachineId(long jarg1, ThresholdOp jarg1_);
  public final static native void ThresholdOp_setMachineId(long jarg1, ThresholdOp jarg1_, String jarg2);
  public final static native int ThresholdOp_getMetricType(long jarg1, ThresholdOp jarg1_);
  public final static native void ThresholdOp_setMetricType(long jarg1, ThresholdOp jarg1_, int jarg2);
  public final static native long ThresholdOp_eGet(long jarg1, ThresholdOp jarg1_, int jarg2, boolean jarg3);
  public final static native void ThresholdOp_eSet(long jarg1, ThresholdOp jarg1_, int jarg2, long jarg3);
  public final static native boolean ThresholdOp_eIsSet(long jarg1, ThresholdOp jarg1_, int jarg2);
  public final static native void ThresholdOp_eUnset(long jarg1, ThresholdOp jarg1_, int jarg2);
  public final static native long ThresholdOp__eClass(long jarg1, ThresholdOp jarg1_);
  public final static native long new_EListPtr__SWIG_0();
  public final static native long new_EListPtr__SWIG_1(long jarg1, boolean jarg2);
  public final static native long new_EListPtr__SWIG_2(long jarg1);
  public final static native long new_EListPtr__SWIG_3(long jarg1, EListPtr jarg1_);
  public final static native void delete_EListPtr(long jarg1);
  public final static native long EListPtr_get(long jarg1, EListPtr jarg1_);
  public final static native long EListPtr___ref__(long jarg1, EListPtr jarg1_);
  public final static native long EListPtr___deref__(long jarg1, EListPtr jarg1_);
  public final static native long EListPtr_release(long jarg1, EListPtr jarg1_);
  public final static native void EListPtr_reset__SWIG_0(long jarg1, EListPtr jarg1_, long jarg2, boolean jarg3);
  public final static native void EListPtr_reset__SWIG_1(long jarg1, EListPtr jarg1_, long jarg2);
  public final static native void EMetricList_insert_all(long jarg1, EMetricList jarg1_, long jarg2, EMetricList jarg2_);
  public final static native void EMetricList_insert_at(long jarg1, EMetricList jarg1_, long jarg2, long jarg3, Metric jarg3_);
  public final static native long EMetricList_get(long jarg1, EMetricList jarg1_, long jarg2);
  public final static native void EMetricList_push_back(long jarg1, EMetricList jarg1_, long jarg2, Metric jarg2_);
  public final static native long EMetricList_size(long jarg1, EMetricList jarg1_);
  public final static native void EMetricList_clear(long jarg1, EMetricList jarg1_);
  public final static native void delete_EMetricList(long jarg1);
  public final static native void EProcessesList_insert_all(long jarg1, EProcessesList jarg1_, long jarg2, EProcessesList jarg2_);
  public final static native void EProcessesList_insert_at(long jarg1, EProcessesList jarg1_, long jarg2, long jarg3, Process jarg3_);
  public final static native long EProcessesList_get(long jarg1, EProcessesList jarg1_, long jarg2);
  public final static native void EProcessesList_push_back(long jarg1, EProcessesList jarg1_, long jarg2, Process jarg2_);
  public final static native long EProcessesList_size(long jarg1, EProcessesList jarg1_);
  public final static native void EProcessesList_clear(long jarg1, EProcessesList jarg1_);
  public final static native void delete_EProcessesList(long jarg1);
  public final static native void ESysInfoList_insert_all(long jarg1, ESysInfoList jarg1_, long jarg2, ESysInfoList jarg2_);
  public final static native void ESysInfoList_insert_at(long jarg1, ESysInfoList jarg1_, long jarg2, long jarg3, SystemInfo jarg3_);
  public final static native long ESysInfoList_get(long jarg1, ESysInfoList jarg1_, long jarg2);
  public final static native void ESysInfoList_push_back(long jarg1, ESysInfoList jarg1_, long jarg2, SystemInfo jarg2_);
  public final static native long ESysInfoList_size(long jarg1, ESysInfoList jarg1_);
  public final static native void ESysInfoList_clear(long jarg1, ESysInfoList jarg1_);
  public final static native void delete_ESysInfoList(long jarg1);
  public final static native void EThresholdList_insert_all(long jarg1, EThresholdList jarg1_, long jarg2, EThresholdList jarg2_);
  public final static native void EThresholdList_insert_at(long jarg1, EThresholdList jarg1_, long jarg2, long jarg3, Threshold jarg3_);
  public final static native long EThresholdList_get(long jarg1, EThresholdList jarg1_, long jarg2);
  public final static native void EThresholdList_push_back(long jarg1, EThresholdList jarg1_, long jarg2, Threshold jarg2_);
  public final static native long EThresholdList_size(long jarg1, EThresholdList jarg1_);
  public final static native void EThresholdList_clear(long jarg1, EThresholdList jarg1_);
  public final static native void delete_EThresholdList(long jarg1);
  public final static native int exportCommands(String jarg1, String jarg2, String jarg3, long jarg4, ExportOp jarg4_) throws InternalIMSException;
  public final static native int getMetricCurrentValue(String jarg1, String jarg2, long jarg3, Metric jarg3_, long jarg4, CurMetricOp jarg4_) throws InternalIMSException;
  public final static native int getMetricHistory(String jarg1, String jarg2, int jarg3, long jarg4, ListMetric jarg4_, long jarg5, MetricHistOp jarg5_) throws InternalIMSException;
  public final static native int getProcesses(String jarg1, long jarg2, ListProcesses jarg2_, long jarg3, ProcessOp jarg3_) throws InternalIMSException;
  public final static native int setSystemInfo(String jarg1, long jarg2, SystemInfo jarg2_) throws InternalIMSException;
  public final static native int setSystemThreshold(int jarg1, long jarg2, Threshold jarg2_) throws InternalIMSException;
  public final static native int getSystemThreshold(int jarg1, long jarg2, ListThreshold jarg2_, long jarg3, ThresholdOp jarg3_) throws InternalIMSException;
  public final static native int defineUserIdentifier(int jarg1, String jarg2) throws InternalIMSException;
  public final static native int defineMachineIdentifier(int jarg1, String jarg2) throws InternalIMSException;
  public final static native int defineJobIdentifier(int jarg1, String jarg2) throws InternalIMSException;
  public final static native int defineTransferIdentifier(int jarg1, String jarg2) throws InternalIMSException;
  public final static native int loadShed(String jarg1, String jarg2, int jarg3) throws InternalIMSException;
  public final static native int setUpdateFrequency(String jarg1, int jarg2) throws InternalIMSException;
  public final static native int getUpdateFrequency(String jarg1, long jarg2) throws InternalIMSException;
  public final static native int stop(String jarg1, long jarg2, Process jarg2_) throws InternalIMSException;
  public final static native int getSystemInfo(String jarg1, long jarg2, ListSysInfo jarg2_, long jarg3, SysInfoOp jarg3_) throws InternalIMSException;
  public final static native int restart(String jarg1, String jarg2, long jarg3, RestartOp jarg3_) throws InternalIMSException;
  public final static native long SWIGExportOpUpcast(long jarg1);
  public final static native long SWIGCurMetricOpUpcast(long jarg1);
  public final static native long SWIGMetricUpcast(long jarg1);
  public final static native long SWIGListMetricUpcast(long jarg1);
  public final static native long SWIGListProcessesUpcast(long jarg1);
  public final static native long SWIGListSysInfoUpcast(long jarg1);
  public final static native long SWIGListThresholdUpcast(long jarg1);
  public final static native long SWIGMetricHistOpUpcast(long jarg1);
  public final static native long SWIGProcessUpcast(long jarg1);
  public final static native long SWIGProcessOpUpcast(long jarg1);
  public final static native long SWIGRestartOpUpcast(long jarg1);
  public final static native long SWIGSysInfoOpUpcast(long jarg1);
  public final static native long SWIGSystemInfoUpcast(long jarg1);
  public final static native long SWIGThresholdUpcast(long jarg1);
  public final static native long SWIGThresholdOpUpcast(long jarg1);
}
